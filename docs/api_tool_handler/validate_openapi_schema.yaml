校验 openapi-schema 数据正确性
---
tags:
  - 自定义 API 工具
summary: 校验 openapi-schema 数据正确性
description: |
  ## 校验 openapi-schema 数据正确性
  openapi-schema: 必须是符合 json 和 openapi 规范的字符串
  ### 基础字段验证
  - server 验证: 确保服务地址不为空
  - description 验证: 确保描述信息不为空
  - paths 验证: 确保接口路径定义不为空
  ### 接口操作验证
  验证每个接口的基本信息：
  - description: 接口描述（字符串类型，不能为空）
  - operationId: 接口唯一标识（字符串类型，不能为空且唯一）
  - parameters: 参数列表（列表类型，不能为空）
  ### 参数验证
  验证每个参数的详细信息：
  - name: 参数名称（字符串类型，不能为空）
  - description: 参数描述（字符串类型，不能为空）
  - required: 是否必填（布尔类型，不能为空）
  - in: 参数位置（必须是 ParameterIn 枚举值之一）
  - type: 参数类型（必须是 ParameterType 枚举值之一）
  例如：
  ```json
  {
    "server": "https://baidu.com",
    "description": "123",
    "paths": {
      "/location": {
        "get": {
          "description": "获取本地位置",
          "operationId": "xxx",
          "parameters": [
            {
              "name": "location",
              "in": "query",
              "description": "参数描述",
              "required": "true",
              "type": "str"
            }
          ]
        }
      }
    }
  }
  ```
operationId: validate_openapi_schema
requestBody:
  content:
    multipart/form-data:
      schema:
        type: object
        properties:
          openapi_schema:
            type: string
        required:
          - openapi_schema
responses:
  x-200:
    $ref: "#/components/responses/BaseResponse"
  "200":
    content:
      application/json:
        schema:
          required:
            - "code"
            - "data"
            - "message"
          properties:
            code:
              type: "string"
              example: "success"
            data:
              type: "string"
              example: ""
            message:
              type: "string"
              example: "数据解析成功"
